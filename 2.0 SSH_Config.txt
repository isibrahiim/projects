Configuring SSH Keys via Git Bash

Step 1: Generate a New SSH Key:
Open Git Bash and generate a new SSH key, replacing "your_email@example.com" with your GitHub email address:
ssh-keygen -t ed25519 -C "your_email@example.com"

When prompted, press Enter to save the key to the default location (usually ~/.ssh/id_ed25519). You can enter a passphrase for additional security or leave it empty.

Step 2: Start the SSH Agent:
Start the SSH agent in the background:
eval "$(ssh-agent -s)"

Step 3: Add Your SSH Key to the SSH Agent:
Add your SSH private key to the ssh-agent:
ssh-add ~/.ssh/id_ed25519

Step 4: Copy the SSH Public Key to Clipboard:
clip < ~/.ssh/id_ed25519.pub

Step 5: Add Your SSH Key to GitHub:
Go to GitHub.com and sign into your account.
Navigate to Settings by clicking on your profile picture at the top right of the page.
Click on SSH and GPG keys in the left sidebar.
Click on New SSH key, give it a descriptive title in the "Title" field, and paste your key into the "Key" field.
Click Add SSH key.

After completing these steps, the SSH section of your GitHub repository will no longer be empty; it will contain the public SSH key you've added. This setup allows you to interact with GitHub repositories using SSH, providing a secure connection without the need to enter your GitHub password each time.

